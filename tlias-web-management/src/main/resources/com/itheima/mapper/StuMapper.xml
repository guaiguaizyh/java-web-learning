<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.StuMapper">
    <insert id="insert">
        insert into student(name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, create_time, update_time)
        values (#{name},#{no},#{gender},#{phone},#{idCard}, #{isCollege}, #{address}, #{degree}, #{graduationDate}, #{clazzId}, #{createTime}, #{updateTime})
    </insert>

    <!--    分页查询-->
    <select id="stulist" resultType="com.itheima.pojo.Stu">
        <!--查询全部-->
        select s.*, IFNULL(c.name,'班级已删除') as clazzName from student as s left join clazz as c on s.clazz_id = c.id
        <!--分页查询的条件-->
        <where>
            <if test="name != null and name != ''">
                s.name like concat('%',#{name},'%')
            </if>
            <if test="clazzId != null and clazzId != ''">
                and s.clazz_id = #{clazzId}
            </if>
            <if test="degree != null and degree != ''">
                and s.degree = #{degree}
            </if>
        </where>
    </select>


    <!--删除学员信息-->
    <delete id="deleteByIds">
        delete from student where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="getById" resultType="com.itheima.pojo.Stu">
        select s.*, c.name as clazzName from student as s left join clazz as c on s.clazz_id = c.id
        where s.id = #{id}
    </select>

    <update id="update">
        update student set name = #{name}, no = #{no}, gender = #{gender}, phone = #{phone},
                           id_card = #{idCard}, is_college = #{isCollege}, address = #{address},
                           degree = #{degree}, graduation_date = #{graduationDate}, clazz_id = #{clazzId},
                           create_time = #{createTime}, update_time = #{updateTime},
                           violation_count = #{violationCount},  <!-- 违纪次数 -->
                            violation_score = #{violationScore}  <!-- 违纪分数 -->
                            where id = #{id}
    </update>

<!--    统计学员的学历信息-->
    <select id="countStudentDegreeData" resultType="java.util.Map">
        select (case degree
                    when 1 then '初中'
                    when 2 then '高中'
                    when 3 then '大专'
                    when 4 then '本科'
                    when 5 then '硕士'
                    else '其他'
            end) name,
               count(*) value
        from student
        group by degree
    </select>
    <!--    统计班级的人数数量-->
    <select id="countClazzCountData" resultType="java.util.Map">
        select clazz.name as pos,count(*) as num
        from student as s left join clazz on s.clazz_id=clazz.id
        group by clazz.name
        order by num;
    </select>


</mapper>